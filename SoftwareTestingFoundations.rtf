{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red183\green250\blue154;\red242\green183\blue251;\red171\green215\blue252;
\red255\green235\blue127;}
{\*\expandedcolortbl;;\cssrgb\c76078\c97255\c66667;\cssrgb\c96471\c78039\c98824;\cssrgb\c72157\c87451\c99216;
\cssrgb\c100000\c92941\c56863;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Page 8\
\
\cb2 the main goal for this book is that it should teach you how to test effectively and efficiently. You should learn that there is a lot more to learn in the area of testing\cb1 \
\
\cb3 As a side effect, you should be prepared to pass the Certified Tester exam.\cb1 \
\
Ha!\
\
Page 14\
\
\cb4 It is designed as a textbook and can even be used as a guide for self-study.\cb1 \
\
\cb2 We have included a single, continuous example to help provide an explanation and practical solutions for all of the topics we cover.\cb1 \
\
Page 17\
\
\cb5 covering what you will need to know to understand the following chapters. Important concepts and essential vocabulary will be explained by using an example application that will be used throughout the book.\cb1 \
\
\cb5 test process with the different testing activities will be illustrated.\cb1 \
\
Page 26\
\
\cb4 To accomplish a structured and controllable software development effort, software development models and \uc0\u8594 development processes are used. Many different models exist. Examples are the waterfall model [Boehm 73], [Boehm 81], the general V-model7 [Boehm 79], and the German V-model XT [URL: V-model XT]). Furthermore, there are the spiral model, different incremental or evolutionary models, and the agile, or lightweight, methods like XP (Extreme Programming [Beck 00]) and SCRUM [Beedle 01], which are popular nowadays (for example, see [Bleek 08]). Development of object-oriented software systems often uses the rational unified process [Jacobson 99].\cb1 \
\
Page 29\
\
\cb2 The goal of the test strategy is the optimal distribution of the tests to the \'93right\'94 parts of the software system.\cb1 \
\
Page 30\
\
\cb3  a requirement may be too imprecise in defining the expected output or the expected behavior of the system. No test cases can then be developed. \uc0\u8594 Testability of this requirement is insufficient. Therefore it must be reworked\cb1 \
\
\cb2 It is important to ensure \uc0\u8594 traceability between the specifications to be tested and the tests themselves. It must be clear which test cases test which requirements and vice versa. Only this way is it possible to decide which requirements are to be or have been tested, how intensively and with which test cases. Even the traceability of requirement changes to the test cases and vice versa should be verified.\cb1 \
\
Page 31\
\
\cb2 The test cases can be determined from the test object\'92s specification (\uc0\u8594 black box test design techniques) or be created by analyzing the source code (\u8594 white box test design techniques).\cb1 \
\
}