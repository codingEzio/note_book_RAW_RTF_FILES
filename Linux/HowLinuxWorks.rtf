{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red183\green250\blue154;\red242\green183\blue251;\red171\green215\blue252;
}
{\*\expandedcolortbl;;\cssrgb\c76078\c97255\c66667;\cssrgb\c96471\c78039\c98824;\cssrgb\c72157\c87451\c99216;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Page 20\
\
\cb2 You should never have to ght with a computer.\cb1 \
\
Page 21\
\
\cb3 Too much detail bogs down the reader and makes the impor- tant stuff dif cult to grasp (the human brain just can\'92t process so many new concepts at once), but too little detail leaves the reader in the dark and unprepared for later material.\cb1 \
\
Page 27\
\
\cb4 The kernel manages the hardware and acts primarily as an interface between the hardware and any running program.\cb1 \
\
Page 28\
\
\cb4 Code running in kernel mode has unrestricted access to the pro- cessor and main memory.\cb1 \
\
\cb4 User mode, in comparison, restricts access to a (usually quite small) subset of memory and safe CPU operations. User space refers to the parts of main memory that the user processes can access.\cb1 \
\
Page 29\
\
\cb4 One of the kernel\'92s tasks is to split memory into many subdivisions, and it must maintain certain state information about those subdivisions at all times.\cb1 \
\
[Process]\
    which processes are allowed to use the CPU\
\
[Memory]\
  keep track of all memory\
  what is curr-allocated-to-a-process\
    what might be shared between proc\
      what is free\
\
[Device-Drivers]\
  hardware << Kernel >> process\
\
[System-calls-and-support]\
  processes use \'91sys-call\'92 to commu with the kernel\
\
}